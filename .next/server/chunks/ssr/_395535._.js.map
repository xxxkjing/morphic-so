{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/theme-provider.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport { ThemeProvider as NextThemesProvider } from 'next-themes'\nimport { type ThemeProviderProps } from 'next-themes/dist/types'\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}\n"],"names":[],"mappings":";;;;;;AAAA;;;AAMO,SAAS,cAAc,EAAE,QAAQ,EAAE,GAAG,OAA2B;IACtE,qBAAO,wPAAC,gJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/utils/index.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\nimport { createOllama } from 'ollama-ai-provider'\nimport { createOpenAI } from '@ai-sdk/openai'\nimport { google } from '@ai-sdk/google'\nimport { anthropic } from '@ai-sdk/anthropic'\nimport { CoreMessage } from 'ai'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function getModel(useSubModel = false) {\n  const ollamaBaseUrl = process.env.OLLAMA_BASE_URL + '/api'\n  const ollamaModel = process.env.OLLAMA_MODEL\n  const ollamaSubModel = process.env.OLLAMA_SUB_MODEL\n  const openaiApiBase = process.env.OPENAI_API_BASE\n  const openaiApiKey = process.env.OPENAI_API_KEY\n  let openaiApiModel = process.env.OPENAI_API_MODEL || 'gpt-4o'\n  const googleApiKey = process.env.GOOGLE_GENERATIVE_AI_API_KEY\n  const anthropicApiKey = process.env.ANTHROPIC_API_KEY\n\n  if (\n    !(ollamaBaseUrl && ollamaModel) &&\n    !openaiApiKey &&\n    !googleApiKey &&\n    !anthropicApiKey\n  ) {\n    throw new Error(\n      'Missing environment variables for Ollama, OpenAI, Google or Anthropic'\n    )\n  }\n  // Ollama\n  if (ollamaBaseUrl && ollamaModel) {\n    const ollama = createOllama({ baseURL: ollamaBaseUrl })\n\n    if (useSubModel && ollamaSubModel) {\n      return ollama(ollamaSubModel)\n    }\n\n    return ollama(ollamaModel)\n  }\n\n  if (googleApiKey) {\n    return google('models/gemini-2.5-flash')\n  }\n\n  if (anthropicApiKey) {\n    return anthropic('claude-3-5-sonnet-20240620')\n  }\n\n  // Fallback to OpenAI instead\n\n  const openai = createOpenAI({\n    baseURL: openaiApiBase, // optional base URL for proxies etc.\n    apiKey: openaiApiKey, // optional API key, default to env property OPENAI_API_KEY\n    organization: '' // optional organization\n  })\n\n  return openai.chat(openaiApiModel)\n}\n\n/**\n * Takes an array of AIMessage and modifies each message where the role is 'tool'.\n * Changes the role to 'assistant' and converts the content to a JSON string.\n * Returns the modified messages as an array of CoreMessage.\n *\n * @param aiMessages - Array of AIMessage\n * @returns modifiedMessages - Array of modified messages\n */\nexport function transformToolMessages(messages: CoreMessage[]): CoreMessage[] {\n  return messages.map(message =>\n    message.role === 'tool'\n      ? {\n          ...message,\n          role: 'assistant',\n          content: JSON.stringify(message.content),\n          type: 'tool'\n        }\n      : message\n  ) as CoreMessage[]\n}\n\n/**\n * Sanitizes a URL by replacing spaces with '%20'\n * @param url - The URL to sanitize\n * @returns The sanitized URL\n */\nexport function sanitizeUrl(url: string): string {\n  return url.replace(/\\s+/g, '%20')\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAQO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,SAAS,cAAc,KAAK;IAC1C,MAAM,gBAAgB,QAAQ,GAAG,CAAC,eAAe,GAAG;IACpD,MAAM,cAAc,QAAQ,GAAG,CAAC,YAAY;IAC5C,MAAM,iBAAiB,QAAQ,GAAG,CAAC,gBAAgB;IACnD,MAAM,gBAAgB,QAAQ,GAAG,CAAC,eAAe;IACjD,MAAM,eAAe,QAAQ,GAAG,CAAC,cAAc;IAC/C,IAAI,iBAAiB,QAAQ,GAAG,CAAC,gBAAgB,IAAI;IACrD,MAAM,eAAe,QAAQ,GAAG,CAAC,4BAA4B;IAC7D,MAAM,kBAAkB,QAAQ,GAAG,CAAC,iBAAiB;IAErD,IACE,CAAC,CAAC,iBAAiB,WAAW,KAC9B,CAAC,gBACD,CAAC,gBACD,CAAC,iBACD;QACA,MAAM,IAAI,MACR;IAEJ;IACA,SAAS;IACT,IAAI,iBAAiB,aAAa;QAChC,MAAM,SAAS,CAAA,GAAA,0JAAA,CAAA,eAAY,AAAD,EAAE;YAAE,SAAS;QAAc;QAErD,IAAI,eAAe,gBAAgB;YACjC,OAAO,OAAO;QAChB;QAEA,OAAO,OAAO;IAChB;IAEA,IAAI,cAAc;QAChB,OAAO,CAAA,GAAA,uJAAA,CAAA,SAAM,AAAD,EAAE;IAChB;IAEA,IAAI,iBAAiB;QACnB,OAAO,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE;IACnB;IAEA,6BAA6B;IAE7B,MAAM,SAAS,CAAA,GAAA,uJAAA,CAAA,eAAY,AAAD,EAAE;QAC1B,SAAS;QACT,QAAQ;QACR,cAAc,GAAG,wBAAwB;IAC3C;IAEA,OAAO,OAAO,IAAI,CAAC;AACrB;AAUO,SAAS,sBAAsB,QAAuB;IAC3D,OAAO,SAAS,GAAG,CAAC,CAAA,UAClB,QAAQ,IAAI,KAAK,SACb;YACE,GAAG,OAAO;YACV,MAAM;YACN,SAAS,KAAK,SAAS,CAAC,QAAQ,OAAO;YACvC,MAAM;QACR,IACA;AAER;AAOO,SAAS,YAAY,GAAW;IACrC,OAAO,IAAI,OAAO,CAAC,QAAQ;AAC7B"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline'\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10'\n      }\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default'\n    }\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button'\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,gNAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,wPAAC;QACC,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/dropdown-menu.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu'\nimport { Check, ChevronRight, Circle } from 'lucide-react'\n\nimport { cn } from '@/lib/utils'\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      'flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent',\n      inset && 'pl-8',\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      'relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      inset && 'pl-8',\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      'px-2 py-1.5 text-sm font-semibold',\n      inset && 'pl-8',\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn('ml-auto text-xs tracking-widest opacity-60', className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = 'DropdownMenuShortcut'\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/mode-toggle.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport { Moon, Sun } from 'lucide-react'\nimport { useTheme } from 'next-themes'\n\nimport { Button } from '@/components/ui/button'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger\n} from '@/components/ui/dropdown-menu'\n\nexport function ModeToggle() {\n  const { setTheme } = useTheme()\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\">\n          <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n          <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n          <span className=\"sr-only\">Toggle theme</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem onClick={() => setTheme('light')}>\n          Light\n        </DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme('dark')}>\n          Dark\n        </DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme('system')}>\n          System\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;AAcO,SAAS;IACd,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAE5B,qBACE,wPAAC,qIAAA,CAAA,eAAY;;0BACX,wPAAC,qIAAA,CAAA,sBAAmB;gBAAC,OAAO;0BAC1B,cAAA,wPAAC,2HAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAQ,MAAK;;sCAC3B,wPAAC,gMAAA,CAAA,MAAG;4BAAC,WAAU;;;;;;sCACf,wPAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;sCAChB,wPAAC;4BAAK,WAAU;sCAAU;;;;;;;;;;;;;;;;;0BAG9B,wPAAC,qIAAA,CAAA,sBAAmB;gBAAC,OAAM;;kCACzB,wPAAC,qIAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAU;;;;;;kCAGpD,wPAAC,qIAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAS;;;;;;kCAGnD,wPAAC,qIAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAW;;;;;;;;;;;;;;;;;;AAM7D"}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;;;;AAAA;;;;AAOA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,wPAAC,wIAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,cAAc;YACZ,YAAY;gBACV,OACE;gBACF,aAAa;gBACb,cACE;gBACF,cACE;YACJ;QACF;QACC,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/utils/app-state.tsx"],"sourcesContent":["'use client'\n\nimport { createContext, useState, ReactNode, useContext } from 'react'\n\nconst AppStateContext = createContext<\n  | {\n      isGenerating: boolean\n      setIsGenerating: (value: boolean) => void\n    }\n  | undefined\n>(undefined)\n\nexport const AppStateProvider = ({ children }: { children: ReactNode }) => {\n  const [isGenerating, setIsGenerating] = useState(false)\n\n  return (\n    <AppStateContext.Provider value={{ isGenerating, setIsGenerating }}>\n      {children}\n    </AppStateContext.Provider>\n  )\n}\n\nexport const useAppState = () => {\n  const context = useContext(AppStateContext)\n  if (!context) {\n    throw new Error('useAppState must be used within an AppStateProvider')\n  }\n  return context\n}\n"],"names":[],"mappings":";;;;;;;AAAA;;;AAIA,MAAM,gCAAkB,CAAA,GAAA,+MAAA,CAAA,gBAAa,AAAD,EAMlC;AAEK,MAAM,mBAAmB,CAAC,EAAE,QAAQ,EAA2B;IACpE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,qBACE,wPAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;YAAc;QAAgB;kBAC9D;;;;;;AAGP;AAEO,MAAM,cAAc;IACzB,MAAM,UAAU,CAAA,GAAA,+MAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}